@{
    ViewData["Title"] = "Affe";
}

<h2>Arm Force Field (AFF)</h2>


<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<style>

    canvas{
        height: 300px;

    }

    #graphMain {
        margin-top: 100px;
        margin-bottom: 100px;
        position: relative;
    }

    #graphMain > * {
        display: inline-block;
        border: 3px solid whitesmoke;
        width: 45%;
        padding: 10px;
 
    }
    #graphMain > *:last-child{
        float: right;
    }
    .slider-container {
        text-align: center;
        font-family: Arial, sans-serif;
        margin: 20px;
    }

    .slider-label {
        margin-bottom: 10px;
        font-size: 18px;
        display: block;
    }

    .slider-value {
        font-weight: bold;
        color: #007BFF;
    }
    .slider{
        width: 500px;
    }
</style>
<div id="graphMain">No manikin loaded</div>
<div class="slider-container">
    <label class="slider-label">
        MAS percentile: <span id="percentSliderValue" class="slider-value">75</span>
    </label>
    <input class="slider" type="range" id="percentSlider" min="1" max="99" value="75">
</div>
<div class="slider-container">
    <label class="slider-label">
        Load Multiplier (demo): <span id="loadSliderValue" class="slider-value">100%</span>
    </label>
    <input class="slider" type="range" id="loadSlider" min="10" max="1000" value="100" step="10">
</div>


<script type="text/javascript">
    var charts = null;
    function populateGraphs(graphData) {
        const vals = graphData.vals;
        if (charts) {
            for (var i = 0; i < 2; i++) {
                for (var j = 0; j < graphData.labels.length; j++) {
                    charts[i].data.datasets[j].data = vals[j + i * graphData.labels.length];
                    charts[i].data.datasets[j].label = graphData.labels[j];
                }
                charts[i].update();
            }
            return;
        }
        charts = [];
        var mainContainer = document.getElementById("graphMain");
        mainContainer.innerHTML = "";

        for (var i = 0; i < 2; i++) {
            var div = mainContainer.appendChild(document.createElement("div"));
            div.appendChild(document.createElement("h3")).textContent = ["Left Arm", "Right Arm"][i];
            var canvas = div.appendChild(document.createElement("canvas"));
            canvas.id = "chart" + i;
            var labelItr = 0;
            var datasets = [];
            for (var j = 0; j < graphData.labels.length; j++) {
                datasets.push({
                    label: graphData.labels[j],
                    data: vals[j + i * graphData.labels.length],
                    borderColor: ["red", "green", "orange"][j],
                    pointRadius: 0,
                    yAxisID: j==2 ? "percent" : "y"
                })
            }

            charts.push(new Chart(canvas.id, {
                type: "line",
                data: {
                    labels: graphData.timestamps,
                    datasets: datasets
                },
                options: {
                    scales: {
                        y: {
                            title: {
                                display: true,
                                text: "Force (N)",
                            }
                        },
                        percent: {
                            title: {
                                display: graphData.labels.length > 2,
                                text: "Percent",
                            },
                            position: "right",
                            ticks: {
                                color: graphData.labels.length > 2 ? "darkgray" : "white"
                            },
                            beginAtZero: true

                        },
                        x: {
                            ticks: {
                                callback: function (index) {
                                    value = graphData.timestamps[index];
                                    return (~~(value * 1000) % 100 === 0) ? value.toFixed(2) : '';
                                }
                            },
                            title: {
                                display: true,
                                text: "Time (s)",
                            }

                        }
                    }
                }
            }));
        }
    }
    const percentSlider = document.getElementById('percentSlider');
    percentSlider.valLabel = document.getElementById('percentSliderValue');
    percentSlider.addEventListener('input', function () {
        this.valLabel.textContent = this.value + "";
        refresh();
    });

    const loadSlider = document.getElementById('loadSlider');
    loadSlider.valLabel = document.getElementById('loadSliderValue');
    loadSlider.addEventListener('input', function () {
        this.valLabel.textContent = this.value + "%";
        refresh();
    });

    function refresh() {
        $.ajax({
            url: '@Url.Action("GetGraphValArrs", "AffTest")',
            method: 'GET',
            data: { 
                percentCapable: percentSlider.value,
                demoLoadPercent: loadSlider.value
            },
            success: function (response) {
                //console.log(response);
                populateGraphs(response);
                
            },
            error: function () {
                //console.log("Failed to fetch message.");
                setTimeout(refresh, 1000);
            }
            
        });
    }

    refresh();


</script>



<div class="slider-container">
    <label class="slider-label">
        Time: <span id="frameSliderValue" class="slider-value">0 s</span>
    </label>
    <input class="slider" type="range" id="frameSlider" min="0" max="0" value="0">
</div>
<div id="stickieViewContainer"></div>
<script src="~/js/three/build/three.js"></script>
<script src="~/js/StickieView.js"></script>
<script src="~/js/StickManikin.js"></script>
<script>
    function stickieStart(){
        var stickieView;
        const frameSlider = document.getElementById('frameSlider');
        frameSlider.valLabel = document.getElementById('frameSliderValue');
        frameSlider.addEventListener('input', function () {
            var frame = stickieView.stickie.setFrameIdx(this.value);
            this.valLabel.textContent = ~~(frame.time * 100) / 100 + " s";
        });
        var stickieViewContainer = document.getElementById("stickieViewContainer");
        stickieViewContainer.style.width = "300px";
        stickieViewContainer.style.height = stickieViewContainer.style.width;
        stickieView = new StickieView(stickieViewContainer);

        $.ajax({
            url: '@Url.Action("GetStickieData", "Home")',
            method: 'GET',
            data: {},
            success: function (response) {
                console.log(response);
                var stickie = new StickManikin(response);
                console.log(stickie);
                stickieView.setStickie(stickie);
                console.log(stickieView);
                frameSlider.max = stickie.data.frames.length;
            },
            error: function () {
                console.log("Error");
            }
        });

    }
    setTimeout(stickieStart, 500);

</script>
